//apply plugin: 'com.android.application'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.likethesalad.stem-library'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.jakewharton.butterknife'

apply from: "${project.rootProject.file('common_function.gradle')}"
kapt {
    correctErrorTypes = true
}

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.3'
    }
}

ext.versionMajor = 1
ext.versionMinor = 4
ext.versionPatch = 14

static def getGitTimestamp() {
    def cmd = 'git show -s --format=%ct'
    return cmd.execute().text.trim() as Long
}

static def generateVersionCodeFromTimestamp() {
    
    
    
    return ((getGitTimestamp() - 1_538_524_800) / 100).toInteger() + 20_000_000
}

def generateVersionCodeFromVersionName() {
    
    
    return (versionMajor * 1_00_00 + versionMinor * 1_00 + versionPatch) + 4_000_000
}

def getVersionCode() {
    if (gitBranchName() == "develop") {
        return generateVersionCodeFromTimestamp()
    } else {
        return generateVersionCodeFromVersionName()
    }
}

static def gitRevision() {
    def cmd = "git rev-parse --short=8 HEAD"
    return cmd.execute().text.trim()
}

static def gitRevisionDate() {
    def cmd = "git show -s --format=%ci HEAD^{commit}"
    return cmd.execute().text.trim()
}

static def gitBranchName() {
    def fromEnv = System.env.BUILDKITE_BRANCH as String ?: ""

    if (!fromEnv.isEmpty()) {
        return fromEnv
    } else {
        
        def cmd = "git rev-parse --abbrev-ref HEAD"
        return cmd.execute().text.trim()
    }
}

static def getGplayVersionSuffix() {
    if (gitBranchName() == "main") {
        return ""
    } else {
        return "-dev"
    }
}

static def gitTag() {
    def cmd = "git describe --exact-match --tags"
    return cmd.execute().text.trim()
}

static def getFdroidVersionSuffix() {
    if (gitTag() == "") {
        return "-dev"
    } else {
        return ""
    }
}

project.android.buildTypes.all { buildType ->
    buildType.javaCompileOptions.annotationProcessorOptions.arguments =
            [
                    validateEpoxyModelUsage: String.valueOf(buildType.name == 'debug')
            ]
}

ext.abiVersionCodes = ["armeabi-v7a": 1, "arm64-v8a": 2, "x86": 3, "x86_64": 4].withDefault { 0 }

def buildNumber = System.env.BUILDKITE_BUILD_NUMBER as Integer ?: 0

android {


    
    
    ndkVersion "21.3.6528147"

    compileSdk versions.compileSdk

    defaultConfig {

        buildConfigField "String", "EVMOS_FAKE_UNINT", "\"${rootProject.ext.constant.EVMOS_FAKE_UNINT}\""

        
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        multiDexEnabled true

        renderscriptTargetApi 24
        renderscriptSupportModeEnabled true

        
        
        versionCode project.getVersionCode()

        
        versionName "${versionMajor}.${versionMinor}.${versionPatch}-sonar"

        
        manifestPlaceholders = [appTaskAffinitySuffix: "H_${gitRevision()}"]
        buildConfigField "boolean", "NEED_PAY", "false"
        buildConfigField "String", "GIT_REVISION", "\"${gitRevision()}\""
        buildConfigField "String", "GIT_REVISION_DATE", "\"${gitRevisionDate()}\""
        buildConfigField "String", "GIT_BRANCH_NAME", "\"${gitBranchName()}\""
        buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
        buildConfigField "String", "APPLICATION_ID", "\"${rootProject.ext.android.applicationId}\""
        buildConfigField "String", "VERSION_NAME", "\"1.4.14-sonar\""

        buildConfigField "im.vector.app.features.VectorFeatures.OnboardingVariant", "ONBOARDING_VARIANT", "im.vector.app.features.VectorFeatures.OnboardingVariant.FTUE_AUTH"

        buildConfigField "im.vector.app.features.crypto.keysrequest.OutboundSessionKeySharingStrategy", "outboundSessionKeySharingStrategy", "im.vector.app.features.crypto.keysrequest.OutboundSessionKeySharingStrategy.WhenTyping"

        buildConfigField "Long", "VOICE_MESSAGE_DURATION_LIMIT_MS", "120_000L"

        
        
        buildConfigField "Boolean", "handleCallAssertedIdentityEvents", "false"

        buildConfigField "Boolean", "enableLocationSharing", "true"
        buildConfigField "String", "mapTilerKey", "\"fU3vlMsMn4Jb6dnEIFsx\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        

        
        splits {
            
            abi {
                
                enable false

                
                

                
                reset()

                
                include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"

                
                universalApk true
            }
        }


        
        
        
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    testOptions {
        
        
        animationsDisabled = true

        
    }
    signingConfigs {
        
    }

    buildTypes {
        debug {
            resValue "string", "app_name", "\"${rootProject.ext.android.app_name}\""

            buildConfigField "boolean", "LOW_PRIVACY_LOG_ENABLE", "false"
            
            buildConfigField "boolean", "ENABLE_STRICT_MODE_LOGS", "false"

        }

        release {
            resValue "string", "app_name", "\"${rootProject.ext.android.app_name}\""

            buildConfigField "boolean", "LOW_PRIVACY_LOG_ENABLE", "false"
            buildConfigField "boolean", "ENABLE_STRICT_MODE_LOGS", "false"

        }
    }

    flavorDimensions "store"

    productFlavors {
        
        develop {
            dimension "store"
            isDefault = true


            resValue "bool", "isGplay", "false"
            buildConfigField "boolean", "ALLOW_FCM_USE", "false"
            buildConfigField "String", "SHORT_FLAVOR_DESCRIPTION", "\"F\""
            buildConfigField "String", "FLAVOR_DESCRIPTION", "\"FDroid\""
        }
        online {
            dimension "store"
            buildConfigField "String", "APPLICATION_ID", "\"${getRApplicationId()}\""
            versionName "${versionMajor}.${versionMinor}.${versionPatch}${getFdroidVersionSuffix()}"

            resValue "bool", "isGplay", "false"
            buildConfigField "boolean", "ALLOW_FCM_USE", "false"
            buildConfigField "String", "SHORT_FLAVOR_DESCRIPTION", "\"F\""
            buildConfigField "String", "FLAVOR_DESCRIPTION", "\"FDroid\""
        }
        gplay {
            apply plugin: 'com.google.gms.google-services'

            dimension "store"
            versionName "${versionMajor}.${versionMinor}.${versionPatch}${getGplayVersionSuffix()}"

            resValue "bool", "isGplay", "true"
            buildConfigField "boolean", "ALLOW_FCM_USE", "true"
            buildConfigField "String", "SHORT_FLAVOR_DESCRIPTION", "\"G\""
            buildConfigField "String", "FLAVOR_DESCRIPTION", "\"GooglePlay\""
        }


    }

    lintOptions {
        lintConfig file("lint.xml")

        checkDependencies true
        abortOnError true
    }

    compileOptions {
        sourceCompatibility versions.sourceCompat
        targetCompatibility versions.targetCompat
    }

    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += [
                "-Xopt-in=kotlin.RequiresOptIn",
                
                
                "-Xopt-in=com.airbnb.mvrx.InternalMavericksApi",
                
                "-Xopt-in=kotlinx.coroutines.FlowPreview",
                
                "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
        ]
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }

    buildFeatures {
        viewBinding true
    }
}
repositories {
    flatDir {
        dirs file('libs')
    }
    google()
}
dependencies {
    
    implementation "com.github.li-xiaojun:XPopup:2.9.19"
    implementation project(":vector-config")
    api project(":matrix-sdk-android")
    implementation project(":matrix-sdk-android-flow")
    implementation project(":library:jsonviewer")
    implementation project(":library:ui-styles")
    implementation project(":library:core-utils")
    implementation project(":library:attachment-viewer")
    implementation project(":library:diff-match-patch")
    implementation project(":library:multipicker")
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation libs.jetbrains.coroutinesCore
    implementation libs.jetbrains.coroutinesAndroid
    implementation libs.jetbrains.coroutinesJava

    implementation libs.androidx.recyclerview
    implementation libs.androidx.appCompat
    implementation libs.androidx.fragmentKtx
    implementation libs.androidx.constraintLayout
    implementation "androidx.sharetarget:sharetarget:1.1.0"
    implementation libs.androidx.core
    implementation "androidx.media:media:1.4.3"
    implementation "androidx.transition:transition:1.4.1"

    implementation "org.threeten:threetenbp:1.4.0:no-tzdb"
    implementation "com.gabrielittner.threetenbp:lazythreetenbp:0.9.0"

    implementation libs.squareup.moshi
    implementation project(path: ':wallet')
    kapt libs.squareup.moshiKotlin

    
    implementation libs.androidx.lifecycleLivedata
    implementation libs.androidx.lifecycleProcess
    implementation libs.androidx.lifecycleRuntimeKtx

    implementation libs.androidx.datastore
    implementation libs.androidx.datastorepreferences


    
    implementation libs.jakewharton.timber

    
    implementation 'com.facebook.stetho:stetho:1.6.0'

    
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.47'

    
    implementation libs.github.flowBinding
    implementation libs.github.flowBindingAppcompat
    implementation libs.github.flowBindingMaterial

    implementation libs.airbnb.epoxy
    implementation libs.airbnb.epoxyGlide
    kapt libs.airbnb.epoxyProcessor
    implementation libs.airbnb.epoxyPaging
    implementation libs.airbnb.mavericks

    
    implementation libs.androidx.work

    
    implementation libs.androidx.pagingRuntimeKtx

    
    implementation libs.arrow.core

    
    implementation libs.androidx.preferenceKtx

    
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    implementation libs.google.material
    implementation 'me.gujun.android:span:1.7'
    implementation libs.markwon.core
    implementation libs.markwon.extLatex
    implementation libs.markwon.inlineParser
    implementation libs.markwon.html
    implementation 'com.googlecode.htmlcompressor:htmlcompressor:1.5.2'
    implementation 'me.saket:better-link-movement-method:2.2.0'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation libs.androidx.autoFill
    implementation 'jp.wasabeef:glide-transformations:4.3.0'
    implementation 'com.github.vector-im:PFLockScreen-Android:1.0.0-beta12'
    implementation 'com.github.hyuwah:DraggableView:1.0.0'

    
    implementation 'androidx.browser:browser:1.4.0'

    
    implementation 'com.nulab-inc:zxcvbn:1.5.2'

    
    implementation 'com.arthenica:ffmpeg-kit-audio:4.5.LTS'

    
    implementation 'com.github.tapadoo:alerter:7.2.4'

    implementation 'com.otaliastudios:autocomplete:1.1.0'

    
    implementation 'com.squareup:seismic:1.0.3'

    
    implementation libs.github.bigImageViewer
    implementation libs.github.glideImageLoader
    implementation libs.github.progressPieIndicator
    implementation libs.github.glideImageViewFactory
    implementation 'me.codeboy.android:align-text-view:2.3.2'

    
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    implementation libs.github.glide
    kapt libs.github.glideCompiler
    implementation 'com.github.yalantis:ucrop:2.2.8'

    
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'

    
    implementation 'nl.dionsegijn:konfetti-xml:2.0.2'

    implementation 'com.github.jetradarmobile:android-snowfall:1.2.1'
    
    implementation libs.dagger.hilt
    kapt libs.dagger.hiltCompiler

    
    implementation 'com.posthog.android:posthog:1.1.2'

    
    gplayImplementation('com.google.firebase:firebase-messaging:23.0.0') {
        exclude group: 'com.google.firebase', module: 'firebase-core'
        exclude group: 'com.google.firebase', module: 'firebase-analytics'
        exclude group: 'com.google.firebase', module: 'firebase-measurement-connector'
    }

    
    gplayImplementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    implementation "androidx.emoji2:emoji2:1.0.1"

    
    
    
    implementation('com.facebook.react:react-native-webrtc:1.94.2-jitsi-10227332@aar')

    
    implementation('org.jitsi.react:jitsi-meet-sdk:5.0.2') {
        exclude group: 'com.google.firebase'
        exclude group: 'com.google.android.gms'
        exclude group: 'com.android.installreferrer'
    }

    
    
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'me.dm7.barcodescanner:zxing:1.9.13'

    
    implementation libs.vanniktech.emojiMaterial
    implementation libs.vanniktech.emojiGoogle

    implementation 'im.dlg:android-dialer:1.2.5'

    
    api libs.jsonwebtoken.jjwtApi
    runtimeOnly libs.jsonwebtoken.jjwtImpl
    runtimeOnly(libs.jsonwebtoken.jjwtOrgjson) {
        exclude group: 'org.json', module: 'json' 
    }
    implementation 'commons-codec:commons-codec:1.15'

    
    implementation 'org.maplibre.gl:android-sdk:9.5.2'
    implementation 'org.maplibre.gl:android-plugin-annotation-v9:1.0.0'


    
    testImplementation libs.tests.junit
    testImplementation libs.tests.kluent
    testImplementation libs.mockk.mockk
    
    testImplementation libs.tests.timberJunitRule
    testImplementation libs.airbnb.mavericksTesting
    testImplementation(libs.jetbrains.coroutinesTest) {
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    
    

    androidTestImplementation libs.androidx.testCore
    androidTestImplementation libs.androidx.testRunner
    androidTestImplementation libs.androidx.testRules
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espressoCore
    androidTestImplementation libs.androidx.espressoContrib
    androidTestImplementation libs.androidx.espressoIntents
    androidTestImplementation libs.tests.kluent
    androidTestImplementation libs.androidx.coreTesting
    androidTestImplementation(libs.jetbrains.coroutinesTest) {
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }
    
    androidTestImplementation libs.tests.timberJunitRule
    
    androidTestImplementation('com.adevinta.android:barista:4.2.0') {
        exclude group: 'org.jetbrains.kotlin'
    }
    androidTestUtil libs.androidx.orchestrator
    implementation 'com.joanzapata.android:base-adapter-helper:1.1.11'
    api 'androidx.lifecycle:lifecycle-runtime:2.0.0'
    api 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.0.0'

    
    api 'com.tencent:mmkv-static:1.2.7'

    api project(path: ':common_router')
    implementation project(path: ':common')

    implementation 'com.codesgood:justifiedtextview:2.0.1'
    implementation 'com.uncopt:android.justified:1.0'
    implementation 'com.text:alginlib:1.0.1'


    implementation 'net.java.dev.jna:jna:5.5.0@aar'
    implementation 'com.alphacephei:vosk-android:0.3.47@aar'
    implementation project(':vosk-res')

    implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'


}
